stages:
  - pre
  - lint

cache:
  paths:
    - node_modules/

# This runs pre-commit hooks, which validate a number of lint issues.
pre-commit:
  stage: pre
  image: python:3
  script:
    - apt-get update && apt-get install -y ruby # Needed for search-and-replace pre-commit hook
    - pip install pre-commit
    - pre-commit run -a
  only:
    - external_pull_requests
    - master

# This does a test build, which checks for broken internal links.
test-build:
  stage: lint
  image: python:3
  script:
    - pip install -r requirements.txt mkdocs
    - mkdocs build --strict
  only:
    - external_pull_requests
    - master

lint:
  stage: lint
  image: node:13
  script:
    # We fetch the master branche, since suggestions are limited to files changed relative to the master branch.
    - git fetch origin master
    # Set up variable for commit range for unified-diff support (faking Travis CI variable).
    - export TRAVIS_COMMIT_RANGE="$(git merge-base HEAD origin/master)...$(git rev-parse HEAD)"
    # Install packages.
    - yarn install --frozen-lockfile
    # This runs a gulp job which runs remark lint checks, both suggestions and errors.
    - ./node_modules/.bin/gulp ci 2>&1 | tee output.log
    - bash -c '! egrep -q "(problem\W)" output.log'
  only:
    - external_pull_requests

lint-master:
  stage: lint
  image: node:13
  script:
    - yarn install --frozen-lockfile
    # This runs a gulp job which runs remark lint checks, only errors.
    - ./node_modules/.bin/gulp problems 2>&1 | tee output.log
    - bash -c '! egrep -q "(problem\W)" output.log'
  only:
    - master
